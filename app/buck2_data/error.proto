/*
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under both the MIT license found in the
 * LICENSE-MIT file in the root directory of this source tree and the Apache
 * License, Version 2.0 found in the LICENSE-APACHE file in the root directory
 * of this source tree.
 */

syntax = "proto3";

// In protobuf, enum values are not namespaced in their type. That means that in
// any protbuf file, you can only have one enum variant with any given name. The
// only reason this file exists is to work around that limitation, especially
// for error types, which may often have a name that might also make sense
// elsewhere.
package buck.data.error;

enum ErrorType {
  // Protobuf requires us to supply a default value; however, this type is
  // always used in an `optional` way and so no default value should ever
  // appear. Still, let's use a sentinal just to be safe.
  UNUSED_DEFAULT = 0;
  DAEMON_IS_BUSY = 1;
  ACTION_COMMAND_FAILURE = 2;
  WATCHMAN = 3;
  // Add causes here as needed
}

enum ErrorCategory {
  // Same as above
  UNUSED_DEFAULT_CATEGORY = 0;
  INFRA = 1;
  USER = 2;
}

// Error types are - by design - restricted to being set exactly once at the
// error definition site. While they are useful, that means that they are enough
// on their own to represent all the error metadata we want. Until we figure out
// what exactly a more complete model looks like, error tags a mechanism that
// offers maximum flexibility - they can be added to any error anywhere.
//
// Feel free to continue using error types if you like.
enum ErrorTag {
  // Same as above
  UNUSED_DEFAULT_TAG = 0;
  STARLARK_FAIL = 1;
  WATCHMAN_TIMEOUT = 2;
  HTTP = 3;
}
